/**{{header_comment()}}*/

using Microsoft.AspNetCore.Http;
using System;
using System.Net;
using System.Threading.Tasks;
using {{service_name}}.Exceptions;

namespace {{service_name}}.Middleware
{
    public class ErrorHandlerMiddleware
    {
        private readonly RequestDelegate _next;
        public ErrorHandlerMiddleware(RequestDelegate next)
        {
            _next = next;
        }

        public async Task InvokeAsync(HttpContext context)
        {
            try
            {
                await _next(context);
            }
            catch (Exception exception)
            {
                await HandleResponseBasedOnException(context, exception);
            }
        }

        private static Task HandleResponseBasedOnException(HttpContext context, Exception exception)
        {
            context.Response.ContentType = "application/json";
            context.Response.StatusCode = (int)(exception switch
            {
                NotFoundException => HttpStatusCode.NotFound,
                BadLogicException => HttpStatusCode.BadRequest,
                ForbiddenException => HttpStatusCode.Forbidden,
                UnauthorizedException => HttpStatusCode.Unauthorized,
                _ => HttpStatusCode.InternalServerError,
            });
            return context.Response.WriteAsJsonAsync(new { context.Response.StatusCode, exception.Message });
        }
    }
}
